version: "3"
services:
  strapi:
    container_name: strapi
    build: s_app/
    env_file: .env
    image: strapi:latest
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
    volumes:
      - ./s_app/config:/opt/app/config
      - ./s_app/src:/opt/app/src
      - ./s_app/package.json:/opt/package.json
      - ./s_app/yarn.lock:/opt/yarn.lock
      - ./s_app/.env:/opt/app/.env
      - ./s_app/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    restart: unless-stopped
    image: postgres:latest
    environment:
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: 123
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      - strapi-db-data:/usr/src/app/data
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

    ports:
      - "5432:5432"
    networks:
      - strapi

  front-end:
    container_name: front-end
    build:
      context: ./opsci-strapi-frontend/
      dockerfile: Dockerfile
    ports:
      - '5173:5173'
    depends_on:
      - strapi
    networks:
      - strapi

volumes:
  strapi-data:
  strapi-db-data:

networks:
  strapi:
    name: strapi 
    driver: bridge
